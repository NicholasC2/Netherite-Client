void NetworkClient::connect(const std::string& host, uint16_t port) {
    if (!initialized) {
        return;
    }

    sockfd = socket(AF_INET, SOCK_STREAM, 0);
    if (sockfd < 0) {
        perror("Socket creation failed");
        return;
    }

    struct sockaddr_in serv_addr{};
    serv_addr.sin_family = AF_INET;
    serv_addr.sin_port = htons(port);

    if (inet_pton(AF_INET, host.c_str(), &serv_addr.sin_addr) <= 0) {
        perror("Invalid address");
        close(sockfd);
        sockfd = -1;
        return;
    }

    if (::connect(sockfd, (struct sockaddr*)&serv_addr, sizeof(serv_addr)) < 0) {
        perror("Connection failed");
        close(sockfd);
        sockfd = -1;
        return;
    }

    std::cout << "Connected to " << host << ":" << port << "\n";
}

void NetworkClient::sendPacket(const Packet& packet) {
    if (!initialized || sockfd < 0) {
        return;
    }

    ssize_t sent = send(sockfd, packet.getData(), packet.getSize(), 0);
    if (sent < 0) {
        perror("Send failed");
    } else {
        std::cout << "Sent " << sent << " bytes\n";
    }
}

void NetworkClient::disconnect() {
    if (!initialized || sockfd < 0) {
        return;
    }

    close(sockfd);
    sockfd = -1;
    std::cout << "Disconnected\n";
}